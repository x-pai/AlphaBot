version: '3'

services:
  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: alphabot-backend
    restart: always
    ports:
      - "8000:8000"
    user: ${UID}:${GID}
    volumes:
      - ./backend:/app
      - ./backend/models:/app/models
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    depends_on:
      - redis
    networks:
      - ai-stock-network

  # Redis 服务
  redis:
    image: redis:alpine
    container_name: alphabot-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - ai-stock-network

  # Celery Worker - AI任务处理
  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: alphabot-celery
    restart: always
    volumes:
      - ./backend:/app
      - ./backend/models:/app/models
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    entrypoint: ""
    command: celery -A app.core.celery_app:celery_app worker -l info -Q ai_tasks
    depends_on:
      - redis
    networks:
      - ai-stock-network

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: alphabot-frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=/api/v1
    depends_on:
      - backend
    networks:
      - ai-stock-network

# 网络配置
networks:
  ai-stock-network:
    driver: bridge

# 数据卷
volumes:
  redis-data: 